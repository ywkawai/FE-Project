################################################################################
#
# Common Makefile for each test (Please include this file)
#
################################################################################

ifeq ($(origin SYSDEP_DIR), undefined)
   SYSDEP_DIR = $(TOPDIR)/sysdep
else
   ifeq ( "$(shell ls $(SYSDEP_DIR) | grep Makedef.$(SCALE_FE_SYS))", "")
      SYSDEP_DIR=$(TOPDIR)/sysdep
   else
      USELOCALBIN = T
   endif
endif

include $(SYSDEP_DIR)/Makedef.$(SCALE_FE_SYS)
include $(TOPDIR)/Mkinclude


msg1 = "\n"

ifeq ($(SCALE_DEBUG),T)
   msg1       += "SCALE_DEBUG is set.\n"
endif

ifeq ($(SCALE_USE_SINGLEFP),T)
   msg1       += "SCALE_USE_SINGLEFP is set.\n"
endif

ifeq ($(SCALE_ENABLE_LOCALBIN),T)
   USELOCALBIN = T
endif

BINDIR2          = $(PWD)
BUILD_DIR_LOCAL := $(PWD)/.libs$(POSTFIX)
msg1         += "The location of executable files is $(BINDIR2)\n"
ifeq ($(USELOCALBIN),T)
   BUILD_DIR  := $(PWD)/.libs$(POSTFIX)
   LIBDIR2   := $(PWD)/lib
   msg1      += "The location of lib dir is changed to $(LIBDIR2)\n"
else
   BUILD_DIR = .libs$(POSTFIX)
   LIBDIR2   = $(LIBDIR)
endif

ifeq ($(origin PPNAME), undefined)
   PPNAME = scale-dg_pp$(POSTFIX)
endif

ifeq ($(origin INITNAME), undefined)
   INITNAME = scale-dg_init$(POSTFIX)
endif

ifeq ($(origin BINNAME), undefined)
   BINNAME = scale-dg$(POSTFIX)
endif

ifeq ($(origin PPCONF), undefined)
   PPCONF = NONE
endif

ifeq ($(origin INITCONF), undefined)
   INITCONF = NONE
endif

ifeq ($(origin RUNCONF), undefined)
   RUNCONF = NONE
endif


#UTILDIR    = ${TOPDIR}/scale-rm/util/netcdf2grads_h


all: build

$(BUILD_DIR_LOCAL)/%.F90: $(CODE_DIR)/%.F90
	mkdir -p $(BUILD_DIR_LOCAL)
	cp -f $< $@

build: $(patsubst %,$(BUILD_DIR_LOCAL)/%,$(ORG_SRCS))
	@echo -e "$(msg1)"
	mkdir -p $(BUILD_DIR_LOCAL)
	$(MAKE) -C $(ATMNONHYDRO3DDIR)/src SYSDEP_DIR=$(SYSDEP_DIR)     \
                                BUILD_DIR=$(BUILD_DIR)             \
                                BUILD_DIR_LOCAL=$(BUILD_DIR_LOCAL) \
                                LIBDIR=$(LIBDIR2)                  \
                                BINDIR=$(BINDIR2)                  \
                                POSTFIX=$(POSTFIX)                 \
                                FFLAG_TESTCASE=$(FFLAG_TESTCASE)   \
                                EXP_ORG_SRCS="$(ORG_SRCS)"

util:
	$(MAKE) -C $(UTILDIR)

run: jobshell
	@if [ $(JOBSUB) = "pjsub" ]; then \
		JID=$$($(JOBSUB) -z jid run.sh $(JOBSUB_OPTION)); if [ $$? -ne 0 ]; then exit 1; fi; \
		echo "$(JOBSUB) run.sh (job id=$$JID) .."; \
		set -- `pjwait $$JID`; if [ $$2 != "0" -o $$3 != "0" ]; then exit 1; fi; \
	else \
		echo "$(JOBSUB) run.sh"; \
		$(JOBSUB) run.sh $(JOBSUB_OPTION); \
	fi

jobshell: export ADDITIONAL_CONF := $(ADDITIONAL_CONF)
jobshell: export OMP_NUM_THREADS := $(OMP_NUM_THREADS)
jobshell:
	@echo "Generate job script.."
	@if [ -f $(SYSDEP_DIR)/Mkjobshell.$(SCALE_FE_SYS).sh ]; then \
		bash $(SYSDEP_DIR)/Mkjobshell.$(SCALE_FE_SYS).sh $(MPIEXEC) $(BINDIR2)            \
		                                              $(PPNAME) $(INITNAME) $(BINNAME) \
		                                              $(PPCONF) $(INITCONF) $(RUNCONF) \
		                                              $(TPROC)                         \
		                                              $(DATPARAM) $(DATDISTS);         \
	else \
		bash $(TOPDIR)/sysdep/Mkjobshell.$(SCALE_FE_SYS).sh $(MPIEXEC) $(BINDIR2)         \
		                                              $(PPNAME) $(INITNAME) $(BINNAME) \
		                                              $(PPCONF) $(INITCONF) $(RUNCONF) \
		                                              $(TPROC)                         \
		                                              $(DATPARAM) $(DATDISTS);         \
	fi

vis:
	bash ./visualize/visualize.sh

eval:
	bash ./evaluate/evaluate.sh

info:
	$(MAKE) -C $(ATMNONHYDRO3DDIR)/src info \
	       BINDIR=$(BINDIR2)                  \
          BUILD_DIR=$(BUILD_DIR)             \
          BUILD_DIR_LOCAL=$(BUILD_DIR_LOCAL) \
          SYSDEP_DIR=$(SYSDEP_DIR)

.PHONY: allclean distclean clean

allclean: distclean clean
	$(MAKE) -C $(ATMNONHYDRO3DDIR)/src allclean BINDIR=$(BINDIR2)            \
                                         BUILD_DIR=$(BUILD_DIR)             \
                                         BUILD_DIR_LOCAL=$(BUILD_DIR_LOCAL) \
                                         LIBDIR=$(LIBDIR2)                  \
                                         SYSDEP_DIR=$(SYSDEP_DIR)

distclean: clean
	$(MAKE) -C $(ATMNONHYDRO3DDIR)/src distclean BINDIR=$(BINDIR2)           \
                                         BUILD_DIR=$(BUILD_DIR)             \
                                         BUILD_DIR_LOCAL=$(BUILD_DIR_LOCAL) \
                                         LIBDIR=$(LIBDIR2)                  \
                                         SYSDEP_DIR=$(SYSDEP_DIR)
	rm -f *.nc *LOG.pe* monitor.pe* latlon* run.sh
	rm -rf analysis

clean:
	rm -rf $(BUILD_DIR_LOCAL)	
	rm -rf $(BUILD_DIR_LOCAL)_tmp
